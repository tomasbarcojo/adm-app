version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-database
    restart: 'no'
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: activadev
      MYSQL_DATABASE: activa
      USER: develop

  nestjs-api:
    image: nestjs-api
    env_file:
      - .env
    ports:
      - "3003:3003"
    depends_on:
      - mysql
    # networks:
    #   - mysql

# version: '3.8'

# services:
#     dev:
#         container_name: nestjs_api_dev
#         image: nestjs-api-dev:1.0.0
#         build:
#             context: .
#             target: development
#             dockerfile: ./Dockerfile
#         command: npm run start:dev
#         ports:
#             - 3003:3003
#         networks:
#             - nesjs-network
#         volumes:
#             - .:/usr/src/app
#             - /usr/src/app/node_modules
#         restart: unless-stopped
#     prod:
#         container_name: nestjs_api_prod
#         image: nestjs-api-prod:1.0.0
#         build:
#             context: .
#             target: production
#             dockerfile: ./Dockerfile
#         command: npm run start:prod
#         ports:
#             - 3000:3000
#         networks:
#             - nesjs-network
#         volumes:
#             - .:/usr/src/app
#             - /usr/src/app/node_modules
#         restart: unless-stopped

# networks:
#     nesjs-network:

# version: '3.3'
# services:
#   db:
#     image: mysql:latest
#     restart: always
#     environment:
#       MYSQL_DATABASE: 'db'
#       # So you don't have to use root, but you can if you like
#       MYSQL_USER: 'user'
#       # You can use whatever password you like
#       MYSQL_PASSWORD: 'password'
#       # Password for root access
#       MYSQL_ROOT_PASSWORD: 'password'
#     ports:
#       # <Port exposed> : < MySQL Port running inside container>
#       - '3306:3306'
#     expose:
#       # Opens port 3306 on the container
#       - '3306'
#       # Where our data will be persisted
#     volumes:
#       - "./config/my.conf:/etc/mysql/conf.d/config-file.cnf"
#       - "./data:/var/lib/mysql:rw"

# version: "3.7"

# services:
#     db:
#         container_name: mysql_comp_dev
#         build:
#             context: ./db-service
#             dockerfile: Dockerfile
#         command: --default-authentication-plugin=mysql_native_password
#         environment:
#             MYSQL_DATABASE: ctodo
#             MYSQL_ROOT_PASSWORD: ~Example1~
#         restart: always
#         hostname: db
#         networks:
#             node_mysql_network:
#         ports:
#             - 3307:3306
#         volumes:
#             - $HOME/docker/volumes/node_mysql/:/var/lib/mysql/
#     api:
#         container_name: node_comp_dev
#         hostname: api
#         build:
#             context: .
#             dockerfile: Dockerfile.dev
#         networks:
#             - node_mysql_network
#         environment:
#             PORT: 8080
#             MYSQL_HOST: db
#             MYSQL_USER: root
#             MYSQL_PASSWORD: ~Example1~
#             MYSQL_DB: ctodo
#             MYSQL_PORT: 3306
#         ports:
#             - target: 8080
#               published: 8080
#               protocol: tcp
#               mode: host
#         volumes:
#             - .:/app
#             - /app/node_modules
#         working_dir: /app
#         stdin_open: true
#         tty: true
#         entrypoint: sh
#         restart: always
#         depends_on:
#             - db
# networks:
#     node_mysql_network:

# volumes:
#     db_data:
#         driver: local